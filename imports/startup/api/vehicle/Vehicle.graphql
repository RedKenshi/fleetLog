type Vehicle{
    _id:String
    societe:Societe
    registration:String
    firstRegistrationDate:String
    km:Int
    kms:[DatedKm]
    lastKmUpdate:String
    brand:Brand
    model:Model
    volume:Volume
    payload:Float
    color:Color
    insurancePaid:Float
    cg:Document
    cv:Document
    crf:Document
    ida:Document
    scg:Document
    energy:Energy
    payementBeginDate:String
    payementEndDate:String
    property:Boolean
    accidents:[Accident]
    purchasePrice:Float
    monthlyPayement:Float
    payementOrg:Organism
    payementFormat:String
    payementTime:PayementTime
    archived:Boolean
    archiveJustification:VehicleArchiveJustification
    archiveDate:String
    shared:Boolean
    sharedTo:Societe
    sharingReason:String
    sharedSince:String
    selling:Boolean
    sellingReason:String
    sellingSince:String
    sold:Boolean
    soldOnDate:String
    brokenHistory:[BrokenHistoryEntry]
    broken:Boolean
    brokenSince:String
    financialInfosComplete:Boolean
    obli:[ControlOccurrence]
    prev:[ControlOccurrence]
}

type ControlOccurrence{
    control:Control!
    selected:Boolean!
    entretien:String
    lastOccurrence:String
}

type BrokenHistoryEntry{
    _id:String!
    date:String!
    content:String!
    statut:Boolean!
}

type DatedKm{
    _id:String!
    reportDate:String!
    kmValue:Int!
}

type VehicleKmUpdateResponse {
    IMMAT:String!
    KMS:Int!
    found:Boolean!
    vehicle:Vehicle
}

type MassKmUpdateVehiclesIdentityReport{
    nbTotal:Int!
    nbFound:Int!
    message:String!
    vehicles:[VehicleKmUpdateResponse]!
}

extend type Query{
    vehicle(_id: String!): Vehicle
    vehicles : [Vehicle]
    vehiclesEmpty : [Vehicle]
    vehiclesEquipedByControls : [Vehicle]
    vehiclesByAccidents : [Vehicle]
    massKmUpdateVehiclesValidation(jsonFromExcelFile:String!):MassKmUpdateVehiclesIdentityReport
}

extend type Mutation{
    addVehicle(societe:String!,registration:String!,firstRegistrationDate:String!,km:Int!,lastKmUpdate:String!,brand:String!,model:String!,volume:String!,payload:Float!,color:String!,energy:String!): [QueryResultMessage]
    editVehicleIdent(_id:String!,societe:String!,registration:String!,firstRegistrationDate:String!,brand:String!,model:String!,volume:String!,payload:Float!,color:String!,energy:String!): [QueryResultMessage]
    editVehicleFinances(_id:String!,insurancePaid:Float!,payementOrg:String!,payementBeginDate:String!,payementEndDate:String!,purchasePrice:Float,payementFormat:String!,payementTime:String!,monthlyPayement:Float!): [QueryResultMessage]
    updateKm(_id:String!,date:String!,kmValue:Int!):[QueryResultMessage]
    deleteKm(vehicle:String!,_id:String!):[QueryResultMessage]
    archiveVehicle(_id:String!,archiveJustification:String!):[QueryResultMessage]
    unArchiveVehicle(_id:String!):[QueryResultMessage]
    shareVehicle(_id:String!,sharingReason:String!,target:String!):[QueryResultMessage]
    unshareVehicle(_id:String!):[QueryResultMessage]
    sellVehicle(_id:String!,sellingReason:String!):[QueryResultMessage]
    unsellVehicle(_id:String!):[QueryResultMessage]
    cancelSellVehicle(_id:String!):[QueryResultMessage]
    finishSellVehicle(_id:String!):[QueryResultMessage]
    addHistoryEntry(_id:String!,content:String!):[QueryResultMessage]
    deleteHistoryEntry(vehicle:String!,_id:String!):[QueryResultMessage]
    breakVehicle(_id:String!):[QueryResultMessage]
    unbreakVehicle(_id:String!):[QueryResultMessage]
    deleteVehicle(_id:String!):[QueryResultMessage]
    updateControl(_id:String!,key:String!,value:Boolean):[QueryResultMessage]
    updateControlLastOccurrence(_id:String!,key:String!,lastOccurrence:String!):[QueryResultMessage]
    applyMassKmUpdate(massKmUpdateMap:String!):[QueryResultMessage]
    uploadVehicleDocument(_id:String!,file:Upload!,type:String,size:Int!):[QueryResultMessage]
}