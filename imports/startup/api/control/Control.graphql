type Control{
    _id:String!
    name:String!
    firstIsDifferent:Boolean!
    firstFrequency:Int!
    frequency:Int!
    unit:String!
    alert:Int!
    alertUnit:String!
    ctrlType:String!
}

type ControlStats{
    control:Control
    affected:Int!
    unaffected:Int!
    total:Int!
    inTime:Int!
    soon:Int!
    late:Int!
}

type ControlAndVehiculesEquiped{
    control: Control
    vehiclesOccurrences: [VehicleAndOccurrence]
}

type VehicleAndOccurrence{
    nextOccurrence:String
    label:String
    echeance:String
    color:String
    timing:String

    lastOccurrence:String
    entretien:String
    vehicle: Vehicle
}

extend type Query{
    ctrlStats(ctrlType:String!,societe:String!) : [ControlStats]
    vehiclesByControl(_id:String!) : ControlAndVehiculesEquiped
    controls(ctrlType:String!) : [Control]
}

extend type Mutation{
    addControl(name:String!,firstIsDifferent:Boolean!,firstFrequency:Int,frequency:Int!,unit:String!,alert:Int!,alertUnit:String!,ctrlType:String!) : [QueryResultMessage]
    updateControlDefinition(_id:String!,name:String!,firstIsDifferent:Boolean!,firstFrequency:Int,frequency:Int!,unit:String!,alert:Int!,alertUnit:String!) : [QueryResultMessage]
    deleteControl(_id:String!) : [QueryResultMessage]
}