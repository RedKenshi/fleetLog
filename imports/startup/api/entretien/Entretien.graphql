type Entretien{
    _id:String!,
    societe:Societe!,
    type:String!,
    originControl:Control,
    originNature:InterventionNature,
    vehicle:Vehicle!,
    piecesQty:[PieceQty],
    archived:Boolean!,
    ficheInter:Document
    status:Int!
    kmAtFinish:Int
    time:Float!
    notes:[Note]!
    user:User
    occurenceDate:String
}

type PieceQty{
    piece:Piece!
    qty:Int!
}

type Note{
    _id:String!
    text:String!
    date:String!
}

extend type Query{
    entretiens : [Entretien]
    entretiensFull : [Entretien]
    entretien(_id:String!) : Entretien
    unaffectedEntretiens : [Entretien]
    entretiensOfTheDay(date:String!) : [Entretien]
    myEntretiens : [Entretien]
}

extend type Mutation{
    affectToMe(_id:String!,occurenceDate:String!): [QueryResultMessage]
    release(_id:String!): [QueryResultMessage]
    createEntretien(vehicle:String!,nature:String!,pieces:String!): [QueryResultComplex]
    createEntretienFromControl(vehicle:String!,control:String!): [QueryResultMessage]
    nextStatus1(_id:String!,affectation:String!,occurenceDate:String!): [QueryResultMessage]
    nextStatus2(_id:String!,time:Float!,kmAtFinish:Int!): [QueryResultMessage]
    nextStatus3(_id:String!): [QueryResultMessage]
    deleteEntretien(_id:String!): [QueryResultMessage]
    archiveEntretien(_id:String!,archived:Boolean!): [QueryResultMessage]
    disArchiveEntretien(_id:String!,archived:Boolean!): [QueryResultMessage]
    addNote(_id:String!,note:String!): [QueryResultMessage]
    addPieceToEntretien(_id:String!,piece:String!): [QueryResultMessage]
    deleteNote(entretien:String!,_id:String!): [QueryResultMessage]
    editInfos(_id:String!,time:Float!,status:Int!,affectation:String!,occurenceDate:String!): [QueryResultMessage]
    editPieces(_id:String!,pieces:String!): [QueryResultMessage]
    uploadEntretienDocument(_id:String!,file:Upload!,type:String,size:Int!):[QueryResultMessage]
}